{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport promiseMiddleware from \"redux-promise\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nexport var store = createStore(rootReducer, composeWithDevTools(applyMiddleware(promiseMiddleware, thunk))); // import { createStore, applyMiddleware } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// const initialState = {\n//   lastUpdate: 0,\n//   light: false,\n//   count: 0\n// };\n// const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"TICK\":\n//       return {\n//         ...state,\n//         lastUpdate: action.lastUpdate,\n//         light: !!action.light\n//       };\n//     case \"INCREMENT\":\n//       return {\n//         ...state,\n//         count: state.count + 1\n//       };\n//     case \"DECREMENT\":\n//       return {\n//         ...state,\n//         count: state.count - 1\n//       };\n//     case \"RESET\":\n//       return {\n//         ...state,\n//         count: initialState.count\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// export const store = (preloadedState = initialState) => {\n//   return createStore(\n//     reducer,\n//     preloadedState,\n//     composeWithDevTools(applyMiddleware())\n//   );\n// };","map":{"version":3,"sources":["/Volumes/Foden/Apps/next-test/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","promiseMiddleware","thunk","rootReducer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,OAAO,IAAMC,KAAK,GAAGN,WAAW,CAC9BK,WAD8B,EAE9BH,mBAAmB,CAACD,eAAe,CAACE,iBAAD,EAAoBC,KAApB,CAAhB,CAFW,CAAzB,C,CAKP;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport promiseMiddleware from \"redux-promise\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(promiseMiddleware, thunk))\n);\n\n// import { createStore, applyMiddleware } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\n// const initialState = {\n//   lastUpdate: 0,\n//   light: false,\n//   count: 0\n// };\n\n// const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"TICK\":\n//       return {\n//         ...state,\n//         lastUpdate: action.lastUpdate,\n//         light: !!action.light\n//       };\n//     case \"INCREMENT\":\n//       return {\n//         ...state,\n//         count: state.count + 1\n//       };\n//     case \"DECREMENT\":\n//       return {\n//         ...state,\n//         count: state.count - 1\n//       };\n//     case \"RESET\":\n//       return {\n//         ...state,\n//         count: initialState.count\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export const store = (preloadedState = initialState) => {\n//   return createStore(\n//     reducer,\n//     preloadedState,\n//     composeWithDevTools(applyMiddleware())\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}