{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  test: 0\n};\nexport default function testReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"TEST\":\n      {\n        console.log(action);\n        return _objectSpread({}, state, {\n          test: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Volumes/Foden/Apps/next-test/redux/reducers/testReducer.js"],"names":["initialState","test","testReducer","state","action","type","console","log","payload"],"mappings":";;;;;;;;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2CI,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AAAa;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,iCACKD,KADL;AAEEF,UAAAA,IAAI,EAAEG,MAAM,CAACI;AAFf;AAID;;AAED;AACE,aAAOL,KAAP;AAVJ;AAYD","sourcesContent":["const initialState = {\n  test: 0\n};\n\nexport default function testReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"TEST\": {\n      console.log(action);\n      return {\n        ...state,\n        test: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}